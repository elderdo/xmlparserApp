xmlparser.c: In function ‘logError’:
xmlparser.c:8:27: error: ‘logFileName’ undeclared (first use in this function)
     FILE* logFile = fopen(logFileName, "a");
                           ^
xmlparser.c:8:27: note: each undeclared identifier is reported only once for each function it appears in
xmlparser.c: In function ‘parseAttributes’:
xmlparser.c:192:5: warning: implicit declaration of function ‘strtok_r’ [-Wimplicit-function-declaration]
     char* attr = strtok_r(attrs, " ", &context);
     ^
xmlparser.c:192:18: warning: initialization makes pointer from integer without a cast [enabled by default]
     char* attr = strtok_r(attrs, " ", &context);
                  ^
xmlparser.c:195:21: warning: initialization makes pointer from integer without a cast [enabled by default]
         char* key = strtok_r(attr, "=", &keyContext);
                     ^
xmlparser.c:196:23: warning: initialization makes pointer from integer without a cast [enabled by default]
         char* value = strtok_r(NULL, "\"", &keyContext);
                       ^
xmlparser.c:232:14: warning: assignment makes pointer from integer without a cast [enabled by default]
         attr = strtok_r(NULL, " ", &context);
              ^
xmlparser.c: In function ‘processUserValue’:
xmlparser.c:451:15: warning: initialization makes pointer from integer without a cast [enabled by default]
  char* attr = strtok_r(node->attributes, " ", &context);
               ^
xmlparser.c:454:15: warning: initialization makes pointer from integer without a cast [enabled by default]
   char* key = strtok_r(attr, "=", &keyContext);
               ^
xmlparser.c:455:15: warning: initialization makes pointer from integer without a cast [enabled by default]
   char* val = strtok_r(NULL, "\"", &keyContext);
               ^
xmlparser.c:472:14: warning: assignment makes pointer from integer without a cast [enabled by default]
         attr = strtok_r(NULL, " ", &context);
              ^
